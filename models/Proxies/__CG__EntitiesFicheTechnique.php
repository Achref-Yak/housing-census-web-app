<?php

namespace Proxies\__CG__\Entities;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class FicheTechnique extends \Entities\FicheTechnique implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setCodeTF($codeTF)
    {
        $this->__load();
        return parent::setCodeTF($codeTF);
    }

    public function getCodeTF()
    {
        $this->__load();
        return parent::getCodeTF();
    }

    public function setAdresseAdmin($adresseAdmin)
    {
        $this->__load();
        return parent::setAdresseAdmin($adresseAdmin);
    }

    public function getAdresseAdmin()
    {
        $this->__load();
        return parent::getAdresseAdmin();
    }

    public function setAdresseTech($adresseTech)
    {
        $this->__load();
        return parent::setAdresseTech($adresseTech);
    }

    public function getAdresseTech()
    {
        $this->__load();
        return parent::getAdresseTech();
    }

    public function setLongitude($longitude)
    {
        $this->__load();
        return parent::setLongitude($longitude);
    }

    public function getLongitude()
    {
        $this->__load();
        return parent::getLongitude();
    }

    public function setLatitude($latitude)
    {
        $this->__load();
        return parent::setLatitude($latitude);
    }

    public function getLatitude()
    {
        $this->__load();
        return parent::getLatitude();
    }

    public function setCodeImmeuble($codeImmeuble)
    {
        $this->__load();
        return parent::setCodeImmeuble($codeImmeuble);
    }

    public function getCodeImmeuble()
    {
        $this->__load();
        return parent::getCodeImmeuble();
    }

    public function setNordre($nordre)
    {
        $this->__load();
        return parent::setNordre($nordre);
    }

    public function getNordre()
    {
        $this->__load();
        return parent::getNordre();
    }

    public function setCategorie($categorie)
    {
        $this->__load();
        return parent::setCategorie($categorie);
    }

    public function getCategorie()
    {
        $this->__load();
        return parent::getCategorie();
    }

    public function setPlan($plan)
    {
        $this->__load();
        return parent::setPlan($plan);
    }

    public function getPlan()
    {
        $this->__load();
        return parent::getPlan();
    }

    public function setNumImmeuble($numImmeuble)
    {
        $this->__load();
        return parent::setNumImmeuble($numImmeuble);
    }

    public function getNumImmeuble()
    {
        $this->__load();
        return parent::getNumImmeuble();
    }

    public function setNumLocal($numLocal)
    {
        $this->__load();
        return parent::setNumLocal($numLocal);
    }

    public function getNumLocal()
    {
        $this->__load();
        return parent::getNumLocal();
    }

    public function setNumEtage($numEtage)
    {
        $this->__load();
        return parent::setNumEtage($numEtage);
    }

    public function getNumEtage()
    {
        $this->__load();
        return parent::getNumEtage();
    }

    public function setCodeMunicipal($codeMunicipal)
    {
        $this->__load();
        return parent::setCodeMunicipal($codeMunicipal);
    }

    public function getCodeMunicipal()
    {
        $this->__load();
        return parent::getCodeMunicipal();
    }

    public function setEtat($etat)
    {
        $this->__load();
        return parent::setEtat($etat);
    }

    public function getEtat()
    {
        $this->__load();
        return parent::getEtat();
    }

    public function setImmeuble(\Entities\Immeuble $immeuble = NULL)
    {
        $this->__load();
        return parent::setImmeuble($immeuble);
    }

    public function getImmeuble()
    {
        $this->__load();
        return parent::getImmeuble();
    }

    public function setAdresse($adresse)
    {
        $this->__load();
        return parent::setAdresse($adresse);
    }

    public function getAdresse()
    {
        $this->__load();
        return parent::getAdresse();
    }

    public function setGPS($gPS)
    {
        $this->__load();
        return parent::setGPS($gPS);
    }

    public function getGPS()
    {
        $this->__load();
        return parent::getGPS();
    }

    public function setGPSss($gPSss)
    {
        $this->__load();
        return parent::setGPSss($gPSss);
    }

    public function getGPSss()
    {
        $this->__load();
        return parent::getGPSss();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'Code_TF', 'Adresse', 'GPS', 'CodeImmeuble', 'Nordre', 'Categorie', 'Plan', 'NumImmeuble', 'NumLocal', 'NumEtage', 'CodeMunicipal', 'Immeuble');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}